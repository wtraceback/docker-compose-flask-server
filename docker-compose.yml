version: "3"
services:
    redis:
        image: ${REDIS_IMAGE_TAG}
        container_name: ${REDIS_CONTAINER_NAME}
        privileged: true
        volumes:
            - ./app/compose/redis/redis.conf:/etc/redis/redis.conf  # 挂载 redis 配置文件
            - ./app/compose/redis/data:/data  # 通过挂载给 redis 数据备份
        ports:
            - ${REDIS_PORTS}
        command: /bin/bash -c "redis-server /etc/redis/redis.conf"   # 容器启动后启动 redis 服务器
        restart: always # always 表示容器运行发生错误时一直重启
        env_file:
            - ./.env

    mysql:
        image: ${MYSQL_IMAGE_TAG}
        container_name: ${MYSQL_CONTAINER_NAME}
        privileged: true
        volumes:
            - ./app/compose/mysql/conf:/etc/mysql/conf.d    # 挂载配置文件对应的目录
            # - ./app/compose/mysql/conf/my.cnf:/etc/mysql/my.cnf # 挂载配置文件
            - ./app/compose/mysql/logs:/var/log/mysql
            - ./app/compose/mysql/data:/var/lib/mysql:rw  # 挂载数据库数据，可读可写
            - ./app/compose/mysql/init:/docker-entrypoint-initdb.d/ # 挂载数据初始化 sql 脚本
            - ./app/compose/mysql/mysql-files:/var/lib/mysql-files
        ports:
            - ${MYSQL_PORTS}  # 与配置文件保持一致
        command: --default-authentication-plugin=mysql_native_password  # 解决外部无法访问
        restart: always
        env_file:
            - ./.env

    web:
        image: ${WEB_IMAGE_TAG}
        build: .                 # 使用当前目录下的 Dockerfile
        container_name: ${WEB_CONTAINER_NAME}
        ports:
            - ${WEB_PORTS}
        volumes:
            - ./:/var/www/html/server # 挂载项目代码
            - ./app/compose/gunicorn:/tmp # 挂载 gunicorn 日志
        links:
            - mysql:mysql
            - redis:redis
        depends_on: # 依赖关系
            - mysql
            - redis
        environment:
            - DEBUG=False
        restart: always
        tty: true
        stdin_open: true
        env_file:
            - ./.env

    nginx:
        image: ${NGINX_IMAGE_TAG}
        container_name: ${NGINX_CONTAINER_NAME}
        ports:
            - ${NGINX_PORTS}
        expose:
            - "80"
        volumes:
            - ./app/compose/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./app/compose/nginx/conf/conf.d:/etc/nginx/conf.d         # nginx 存放配置文件的目录
            - ./app/compose/nginx/logs:/var/log/nginx                   # nginx 存放日志的目录
            - ./app/compose/nginx/html:/usr/share/nginx/html            # nginx 启动网站目录（存放静态文件的目录）
        links:
            - web
        depends_on:
            - web
        restart: always
        env_file:
            - ./.env
